{"version":3,"file":"angular-resizable-element.js.map","sources":["ng://angular-resizable-element/resizable.directive.ts","ng://angular-resizable-element/resize-handle.directive.ts","ng://angular-resizable-element/resizable.module.ts"],"sourcesContent":["import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, Observable, Observer, merge, EMPTY } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  filter,\n  pairwise,\n  take,\n  share,\n  auditTime,\n  switchMap,\n  startWith\n} from 'rxjs/operators';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff < precision;\n}\n\nfunction getNewBoundingRectangle(\n  startingRect: BoundingRectangle,\n  edges: Edges,\n  clientX: number,\n  clientY: number\n): BoundingRectangle {\n  const newBoundingRect: BoundingRectangle = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n\n  return newBoundingRect;\n}\n\nfunction getElementRect(\n  element: ElementRef,\n  ghostElementPositioning: string\n): BoundingRectangle {\n  let translateX = 0;\n  let translateY = 0;\n  const style = element.nativeElement.style;\n  const transformProperties = [\n    'transform',\n    '-ms-transform',\n    '-moz-transform',\n    '-o-transform'\n  ];\n  const transform = transformProperties\n    .map(property => style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate3d')) {\n    translateX = transform.replace(\n      /.*translate3d\\((.*)px, (.*)px, (.*)px\\).*/,\n      '$1'\n    );\n    translateY = transform.replace(\n      /.*translate3d\\((.*)px, (.*)px, (.*)px\\).*/,\n      '$2'\n    );\n  } else if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n\nfunction isWithinBoundingX({\n  clientX,\n  rect\n}: {\n  clientX: number;\n  rect: ClientRect;\n}): boolean {\n  return clientX >= rect.left && clientX <= rect.right;\n}\n\nfunction getResizeEdges({\n  clientX,\n  clientY,\n  elm,\n  allowedEdges,\n  cursorPrecision\n}: {\n  clientX: number;\n  clientY: number;\n  elm: ElementRef;\n  allowedEdges: Edges;\n  cursorPrecision: number;\n}): Edges {\n  const elmPosition: ClientRect = elm.nativeElement.getBoundingClientRect();\n  const edges: Edges = {};\n\n  if (\n    allowedEdges.left &&\n    isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.left = true;\n  }\n\n  if (\n    allowedEdges.right &&\n    isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.right = true;\n  }\n\n  if (\n    allowedEdges.top &&\n    isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.top = true;\n  }\n\n  if (\n    allowedEdges.bottom &&\n    isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n\nexport interface ResizeCursors {\n  topLeft: string;\n  topRight: string;\n  bottomLeft: string;\n  bottomRight: string;\n  leftOrRight: string;\n  topOrBottom: string;\n}\n\nconst DEFAULT_RESIZE_CURSORS: ResizeCursors = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\n\nfunction getResizeCursor(edges: Edges, cursors: ResizeCursors): string {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}: {\n  edges: Edges;\n  initialRectangle: BoundingRectangle;\n  newRectangle: BoundingRectangle;\n}): Edges {\n  const edgesDiff: Edges = {};\n  Object.keys(edges).forEach(edge => {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Allow elements to be resized to negative dimensions\n   */\n  @Input() allowNegativeResizes: boolean = false;\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter<ResizeEvent>();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n    event: MouseEvent | TouchEvent;\n  }>();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private destroy$ = new Subject<void>();\n\n  private resizeEdges$ = new Subject<Edges>();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    // TODO - use some fancy Observable.merge's for this\n    this.pointerEventListeners.pointerDown\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY }) => {\n        this.mousedown.next({ clientX, clientY });\n      });\n\n    this.pointerEventListeners.pointerMove\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY, event }) => {\n        this.mousemove.next({ clientX, clientY, event });\n      });\n\n    this.pointerEventListeners.pointerUp\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ clientX, clientY }) => {\n        this.mouseup.next({ clientX, clientY });\n      });\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const getResizeCursors = (): ResizeCursors => {\n      return {\n        ...DEFAULT_RESIZE_CURSORS,\n        ...this.resizeCursors\n      };\n    };\n\n    const mouseMove: Observable<any> = this.mousemove.pipe(share());\n\n    mouseMove.pipe(filter(() => !!currentResize)).subscribe(({ event }) => {\n      event.preventDefault();\n    });\n\n    this.resizeEdges$\n      .pipe(\n        startWith(this.resizeEdges),\n        map(() => {\n          return (\n            this.resizeEdges &&\n            Object.keys(this.resizeEdges).some(edge => !!this.resizeEdges[edge])\n          );\n        }),\n        switchMap(legacyResizeEdgesEnabled =>\n          legacyResizeEdgesEnabled ? mouseMove : EMPTY\n        ),\n        auditTime(MOUSE_MOVE_THROTTLE_MS)\n      )\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors = getResizeCursors();\n        if (!currentResize) {\n          const cursor = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable<any> = this.mousedown\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return merge(\n            mouseMove.pipe(take(1)).pipe(map(coords => [coords])),\n            mouseMove.pipe(pairwise())\n          )\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(this.mouseup, this.mousedown)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return (\n            this.allowNegativeResizes ||\n            !!(\n              newBoundingRect.height &&\n              newBoundingRect.width &&\n              newBoundingRect.height > 0 &&\n              newBoundingRect.width > 0\n            )\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        })\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    this.mousedown\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        })\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        const resizeCursors = getResizeCursors();\n        const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n        this.renderer.setStyle(document.body, 'cursor', cursor);\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    this.mouseup.subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.resizeEdges) {\n      this.resizeEdges$.next(this.resizeEdges);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    // browser check for angular universal, because it doesn't know what document is\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(document.body, 'cursor', '');\n    }\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.resizeEdges$.complete();\n    this.destroy$.next();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable<PointerEventCoordinate>;\n\n  public pointerMove: Observable<PointerEventCoordinate>;\n\n  public pointerUp: Observable<PointerEventCoordinate>;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n","import {\n  Directive,\n  Input,\n  HostListener,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizeHandle]'\n})\nexport class ResizeHandleDirective implements OnDestroy {\n  /**\n   * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n   */\n  @Input() resizeEdges: Edges = {};\n\n  private eventListeners: {\n    touchmove?: () => void;\n    mousemove?: () => void;\n    [key: string]: (() => void) | undefined;\n  } = {};\n\n  constructor(\n    private renderer: Renderer2,\n    private element: ElementRef,\n    private zone: NgZone,\n    private resizable: ResizableDirective\n  ) {}\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY'\n  ])\n  @HostListener('mousedown', ['$event', '$event.clientX', '$event.clientY'])\n  onMousedown(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    event.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(\n          this.element.nativeElement,\n          'touchmove',\n          (touchMoveEvent: TouchEvent) => {\n            this.onMousemove(\n              touchMoveEvent,\n              touchMoveEvent.targetTouches[0].clientX,\n              touchMoveEvent.targetTouches[0].clientY\n            );\n          }\n        );\n      }\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(\n          this.element.nativeElement,\n          'mousemove',\n          (mouseMoveEvent: MouseEvent) => {\n            this.onMousemove(\n              mouseMoveEvent,\n              mouseMoveEvent.clientX,\n              mouseMoveEvent.clientY\n            );\n          }\n        );\n      }\n      this.resizable.mousedown.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchend', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('touchcancel', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('mouseup', ['$event.clientX', '$event.clientY'])\n  onMouseup(clientX: number, clientY: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  private onMousemove(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListeners).forEach(type => {\n      (this as any).eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { ResizeHandleDirective } from './resize-handle.directive';\n\n@NgModule({\n  declarations: [ResizableDirective, ResizeHandleDirective],\n  exports: [ResizableDirective, ResizeHandleDirective]\n})\nexport class ResizableModule {}\n"],"names":[],"mappings":"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"}
